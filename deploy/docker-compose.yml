name: bunnychess
services:
  gateway:
    env_file:
      - ./env/.common.env
      - ./env/.gateway.env
    build:
      context: ../backend
      args:
        - APP=gateway
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - authentication
      - matchmaking
      - game

  authentication:
    env_file:
      - ./env/.common.env
      - ./env/.authentication.env
    build:
      context: ../backend
      args:
        - APP=authentication
    restart: unless-stopped
    expose:
      - 50051
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  matchmaking:
    env_file:
      - ./env/.common.env
      - ./env/.matchmaking.env
    build:
      context: ../backend
      args:
        - APP=matchmaking
    restart: unless-stopped
    expose:
      - 50052
    depends_on:
      nats:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  game:
    env_file:
      - ./env/.common.env
      - ./env/.game.env
    build:
      context: ../backend
      args:
        - APP=game
    restart: unless-stopped
    expose:
      - 50053
    depends_on:
      nats:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ../frontend
    restart: unless-stopped
    volumes:
      - ./default-conf/frontend:/etc/nginx/conf.d
    depends_on:
      - gateway
    ports:
      - 8080:80

  postgres:
    env_file:
      - ./env/.postgres.env
    image: postgres:15.3
    user: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 30
    environment:
      POSTGRES_USER: postgres
    restart: unless-stopped
    volumes:
      - postgres:/var/lib/postgresql/data
    expose:
      - 5432

  redis:
    image: redis:7.2.3-alpine3.18
    expose:
      - 6379
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--maxmemory-policy", "noeviction"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 3s
      retries: 30
    volumes:
      - redis:/data
    restart: unless-stopped

  nats:
    env_file:
      - ./env/.nats.env
    image: nats:2.10.6-alpine3.18
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 3s
      timeout: 3s
      retries: 30
    restart: unless-stopped
    command: ["-js", "-m", "8222", "--user", "nats", "--pass", "${NATS_PASSWORD}", '--store_dir', '/data/js']
    expose:
      - 4222
      - 6222
      - 8222
    volumes:
      - nats:/data/js

volumes:
  postgres:
  redis:
  nats:
